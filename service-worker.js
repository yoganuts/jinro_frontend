"use strict";var precacheConfig=[["/jinro_frontend/index.html","7d2c58202a53f8c83f901eab03bb7280"],["/jinro_frontend/static/css/main.7411b904.css","c5f6059377c27434342d889d271e268a"],["/jinro_frontend/static/js/main.bf1b13e3.js","8555d457fa64718eb4ba42f5e1deef32"],["/jinro_frontend/static/media/00.1e336b17.jpg","1e336b17479584f420813d53745aefa4"],["/jinro_frontend/static/media/00.a8cbd298.jpeg","a8cbd298045fc22e9b705fce75f1f091"],["/jinro_frontend/static/media/01.4ae319a4.jpg","4ae319a4eedeec8cc063e9aba4ead8b0"],["/jinro_frontend/static/media/01.5f196e08.jpeg","5f196e0882ba742366b26fd43c51eec2"],["/jinro_frontend/static/media/02.3d8b6e3f.jpeg","3d8b6e3faac5ecab2ff43ae2a91da2e3"],["/jinro_frontend/static/media/02.432d61fd.jpg","432d61fd3f38f54f912047ab678cc0c4"],["/jinro_frontend/static/media/03.1652f7e9.jpg","1652f7e9c330905fa6f55a66ec9b33c3"],["/jinro_frontend/static/media/03.512e14ec.jpeg","512e14ec0fe991a091fe8249e03a69a5"],["/jinro_frontend/static/media/04.060daed1.jpg","060daed14ce8346131edf4ef486dc885"],["/jinro_frontend/static/media/05.0ca07792.jpg","0ca07792489ca8bf8747db98b0cdc32c"],["/jinro_frontend/static/media/06.c60fcb0b.jpg","c60fcb0be09e491814a8f4253973a83b"],["/jinro_frontend/static/media/07.afff988c.jpg","afff988ca46ba42afce5aa1c50d9cafa"],["/jinro_frontend/static/media/08.8b591655.jpg","8b591655a85c05309b3273f33bb6eb2a"],["/jinro_frontend/static/media/09.8b103b76.jpg","8b103b76c0c6ba99c1de05d71171da37"],["/jinro_frontend/static/media/10.c3f38298.jpg","c3f382984f371791e82fdd048fc5e137"],["/jinro_frontend/static/media/11.607ff22d.jpg","607ff22d230565a215aacbe900fba2c2"],["/jinro_frontend/static/media/jinro.a782390f.svg","a782390f0b586d399b3754bf60d19bf5"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,n){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=n),t.toString()},cleanResponse=function(n){return n.redirected?("body"in n?Promise.resolve(n.body):n.blob()).then(function(e){return new Response(e,{headers:n.headers,status:n.status,statusText:n.statusText})}):Promise.resolve(n)},createCacheKey=function(e,n,t,a){var r=new URL(e);return a&&r.pathname.match(a)||(r.search+=(r.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,n){if(0===e.length)return!0;var t=new URL(n).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var n=new URL(e);return n.hash="",n.search=n.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(n){return t.every(function(e){return!e.test(n[0])})}).map(function(e){return e.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var n=e[0],t=e[1],a=new URL(n,self.location),r=createCacheKey(a,hashParamName,t,/\.\w{8}\./);return[a.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(a){return setOfCachedUrls(a).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!t.has(n)){var e=new Request(n,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+n+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return a.put(n,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(n){return n.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return n.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(n){if("GET"===n.request.method){var e,t=stripIgnoredUrlParameters(n.request.url,ignoreUrlParametersMatching),a="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,a),e=urlsToCacheKeys.has(t));var r="/jinro_frontend/index.html";!e&&"navigate"===n.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],n.request.url)&&(t=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&n.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',n.request.url,e),fetch(n.request)}))}});